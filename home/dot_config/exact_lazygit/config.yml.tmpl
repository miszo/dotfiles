# yaml-language-server: $schema=https://json.schemastore.org/lazygit.json
# vim: syntax=yaml
{{ if .computer.isWork -}}
services:
  {{ .lazygit.work.serviceName | quote }}: {{ .lazygit.work.serviceValue | quote }}
{{- end }}
os:
  edit: open_in_nvim {{"{{"}}filename{{"}}"}}
  editAtLine: open_in_nvim {{"{{"}}filename{{"}}"}} {{"{{"}}line{{"}}"}}
  shellFunctionsFile: {{ joinPath .chezmoi.homeDir ".config" "zsh" ".zsh_lazygit.zsh" }}
gui:
  showFileIcons: true
  nerdFontsVersion: "3"
  # Use the mocha catppuccin theme
  theme:
    activeBorderColor:
      - "#89b4fa"
      - bold
    inactiveBorderColor:
      - "#a6adc8"
    optionsTextColor:
      - "#89b4fa"
    selectedLineBgColor:
      - "#313244"
    cherryPickedCommitBgColor:
      - "#45475a"
    cherryPickedCommitFgColor:
      - "#89b4fa"
    unstagedChangesColor:
      - "#f38ba8"
    defaultFgColor:
      - "#cdd6f4"
    searchingActiveBorderColor:
      - "#f9e2af"
  branchColorPatterns:
    # sdlc branches
    "^(main|master|dev|develop|staging|production)$": "#a6e3a1"
    # feature branches
    "^(feat|feature)/": "#89b4fa"
    # bugfix branches
    "^(fix|bug|bugfix)/": "#f9e2af"
    # test/refactor/performance branches
    "^(test/refactor|perf)/": "#f5c2e7"
    # hotfix/revert branches
    "^(hotfix|refert)/": "#f38ba8"
    # chore/config branches
    "^(chore|config|ci|build|docs)/": "#f5e0dc"
  authorColors:
    "Miszo Radomski": "#a6e3a1"
    "*": "#b4befe"
customCommands:
  - key: "G"
    command: |
      git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
    context: "global"
    description: "Prune local branches no longer on its remote; (G)one."
    loadingText: "Pruning gone..."
  - key: "<c-v>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        suggestions:
          command: 'git symbolic-ref --short HEAD | grep -e "[a-zA-Z0-9]\+-[0-9]\+" -o | tr a-z A-Z'
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{ "{{ .Form.Type }}" }}{{ "{{ if .Form.Scope }}" }}({{ "{{ .Form.Scope }}" }}){{ "{{ end }}" }}: {{ "{{ .Form.Message }}" }}'"
    loadingText: "Creating conventional commit..."
