# vim: syntax=sh

eval "$(/opt/homebrew/bin/brew shellenv)"

DEFAULT_USER="miszo"

# Zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
declare -A ZINIT
ZINIT[BIN_DIR]="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/bin"
ZINIT[HOME_DIR]="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit"
ZINIT[MAN_DIR]="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/man"
ZINIT[PLUGINS_DIR]="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/plugins"
ZINIT[COMPLETIONS]="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/completions"
ZINIT[SNIPPETS]="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/snippets"
source "${ZINIT_HOME}/zinit.zsh"

ZSH_CACHE_DIR="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit"

# Add in zsh plugins
zinit light MichaelAquilina/zsh-you-should-use
zinit light lukechilds/zsh-better-npm-completion
zinit light chrisands/zsh-yarn-completions
zinit light Aloxaf/fzf-tab
zinit light Tarrasch/zsh-bd

zinit wait lucid for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
 blockf \
    zsh-users/zsh-completions \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

# Add in omz plugins
zinit snippet OMZP::asdf
zinit snippet OMZP::aws
zinit snippet OMZP::brew
zinit snippet OMZP::bun
zinit snippet OMZP::command-not-found
zinit snippet OMZP::deno
zinit snippet OMZP::docker
zinit snippet OMZP::extract
zinit snippet OMZP::git
zinit snippet OMZP::node
zinit snippet OMZP::ruby
zinit snippet OMZP::rails
zinit snippet "$ZDOTDIR/plugins/chezmoi.zsh"
zinit snippet "$ZDOTDIR/plugins/gh.zsh"
zinit snippet "$ZDOTDIR/plugins/op.zsh"
zinit snippet "$ZDOTDIR/plugins/pnpm.zsh"

# Keybindings
bindkey "^p" history-search-backward
bindkey "^n" history-search-forward
bindkey "^[w" kill-region
bindkey "^[b" backward-word
bindkey "^[f" forward-word
bindkey  "^[[H"   beginning-of-line
bindkey  "^[[F"   end-of-line
bindkey  "^[[3~"  delete-char

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Complete aliases
setopt completealiases

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -l --color always -a -s type --icons $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'eza -l --color always -a -s type --icons $realpath'

function load_zsh_config {
    if [ -f $ZDOTDIR/.zsh_$1.zsh ];
    then
        . $ZDOTDIR/.zsh_$1.zsh
    else
        echo "Couldn't load the $1 config file."
    fi
}

load_zsh_config credentials
load_zsh_config env
load_zsh_config functions
load_zsh_config aliases

{{ if .computer.isWork -}}
load_zsh_config work_env
load_zsh_config work_functions
load_zsh_config work_aliases
{{ end -}}

autoload -Uz compinit
compinit

zinit cdreplay -q

# Shell integrations
eval "$(fzf --zsh)"
eval "$(thefuck --alias)"
eval "$(gh copilot alias -- zsh)"
eval "$(zoxide init --cmd cd zsh)"
eval "$(tmuxifier init -)"

# 1password cli
source ${HOME}/.config/op/plugins.sh

# ImageMagick
export DYLD_LIBRARY_PATH="$(brew --prefix)/lib:$DYLD_LIBRARY_PATH"

# fzf default options
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:-1,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"

# set java env variables
[[ -f ~/.asdf/plugins/java/set-java-home.zsh ]] && . ~/.asdf/plugins/java/set-java-home.zsh || true

# set golang env variables
[[ -f ~/.asdf/plugins/golang/set-env.zsh ]] && . ~/.asdf/plugins/golang/set-env.zsh || true
export ASDF_GOLANG_MOD_VERSION_ENABLED=true

# set rust env variables
[[ -f "~/.asdf/installs/rust/1.77.1/env" ]] && . "~/.asdf/installs/rust/1.77.1/env" || true

# run oh-my-posh
eval "$(oh-my-posh init zsh --config $HOME/.config/oh-my-posh/config.json)"
