# vim: syntax=toml
{{- $opPersonalAccountCode := promptStringOnce . "opPersonalAccountCode" "What is your 1Password personal account" -}}
{{- $workComputerPrefix := promptStringOnce . "workComputerPrefix" "What is your work computer name prefix" -}}

{{- $opPersonalAccountName := output (joinPath .chezmoi.workingTree "./scripts/get_op_account.sh") $opPersonalAccountCode ".name" | trim -}}
{{- $opPersonalAccountId := output (joinPath .chezmoi.workingTree "./scripts/get_op_account.sh") $opPersonalAccountCode | trim -}}
{{- $opPersonalVaultName := "dev" -}}
{{- $opPersonalVaultId := output (joinPath .chezmoi.workingTree "./scripts/get_op_vault.sh") $opPersonalVaultName $opPersonalAccountCode | trim -}}
{{- $name := "Miszo Radomski" -}}

{{- $gpgPassphrase := onepasswordRead "op://dev/Chezmoi GPG passhrase/password" $opPersonalAccountCode -}}
{{- $personalEmail := onepasswordRead "op://dev/email/personal" $opPersonalAccountCode | trim -}}

{{/* initialize variables used for work */}}
{{- $isWork := false -}}
{{- $workEmail := "" -}}
{{- $opWorkAccountCode := "" -}}
{{- $opWorkAccountName := "" -}}
{{- $opWorkAccountId := "" -}}
{{- $opWorkVaultName := "" -}}
{{- $opWorkVaultId := "" -}}

{{- if hasPrefix $workComputerPrefix .chezmoi.hostname -}}
{{- $isWork = true -}}
{{- end -}}

{{- if $isWork -}}
{{- $opWorkAccountCode = promptStringOnce . "opWorkAccountCode" "What is your 1Password work account" -}}
{{- $workEmail = onepasswordRead "op://Employee/email/personal" $opWorkAccountCode | trim -}}
{{- $opWorkAccountName = output (joinPath .chezmoi.workingTree "./scripts/get_op_account.sh") $opWorkAccountCode ".name" | trim -}}
{{- $opWorkAccountId = output (joinPath .chezmoi.workingTree "./scripts/get_op_account.sh") $opWorkAccountCode | trim -}}
{{- $opWorkVaultName = "Employee" -}}
{{- $opWorkVaultId = output (joinPath .chezmoi.workingTree "./scripts/get_op_vault.sh") $opWorkVaultName $opWorkAccountCode | trim -}}
{{- end }}

encryption = "gpg"

[diff]
exclude = ["scripts", "externals"]
pager = "delta"
args = ["--features", "catpuccin-mocha"]

[data]
name = {{ $name | quote }}

[data.computer]
hostname = {{ .chezmoi.hostname | quote }}
isWork = {{ $isWork }}

[data.user.personal]
name = {{ $name | quote }}
email = {{ $personalEmail | quote }}

{{- if $isWork  }}
[data.user.work]
name = {{ $name | quote }}
email = {{ $workEmail | quote }}
{{- end }}

[data.git.personal]
email = {{ $personalEmail | quote }}
signingkey = {{ onepasswordRead "op://dev/Commit signing key/public key" $opPersonalAccountCode | quote }}

{{- if $isWork }}
[data.git.work]
email = {{ $workEmail | quote }}
signingkey = {{ onepasswordRead "op://Employee/Commit signing key/public key" $opWorkAccountCode | quote }}

[data.lazygit.work]
serviceName = {{ onepasswordRead "op://Employee/LazyGit service/name" $opWorkAccountCode | quote }}
serviceValue = {{ onepasswordRead "op://Employee/LazyGit service/value" $opWorkAccountCode | quote }}
{{- end }}

[data.op.personal]
accountCode = {{ $opPersonalAccountCode | quote }}
accountName = {{ $opPersonalAccountName }}
accountId = {{ $opPersonalAccountId }}
vaultName = {{ $opPersonalVaultName | quote }}

{{- if $isWork }}
[data.op.work]
accountCode = {{ $opWorkAccountCode | quote }}
accountName = {{ $opWorkAccountName }}
accountId = {{ $opWorkAccountId }}
vaultName = {{ $opWorkVaultName | quote }}
{{- end }}

[data.brew]
brewfilePath = {{ joinPath .chezmoi.homeDir ".config" "brew" "Brewfile" | quote }}
toolVersionsPath = {{ joinPath .chezmoi.homeDir ".tool-versions" | quote }}

[data.exportedSettings]
veljaFilePath = {{ joinPath .chezmoi.homeDir ".config" "exported-settings" "Velja.plist" | quote }}
betterDisplayFilePath = {{ joinPath .chezmoi.homeDir ".config" "exported-settings" "BetterDisplay.plist" | quote }}

[data.gh]
accountId = {{ $opPersonalAccountId }}
vaultId = {{ $opPersonalVaultId }}
itemId = {{ (onepassword "GitHub CLI token" $opPersonalVaultName $opPersonalAccountCode).id | quote }}
token = {{ onepasswordRead "op://dev/GitHub CLI token/token" $opPersonalAccountCode | quote }}
chezmoiToken = {{ onepasswordRead "op://dev/chezmoi GitHub API Token/token" $opPersonalAccountCode | quote }}

{{- if $isWork }}
[data.glab]
accountId = {{ $opWorkAccountId }}
vaultId = {{ $opWorkVaultId }}
itemId = {{ (onepassword "GitLab CLI token" $opWorkVaultName $opWorkAccountCode).id | quote }}
{{- end }}

{{- if not $isWork }}
[data.ssh.homelab]
host = {{ onepasswordRead "op://dev/Homelab SSH key/Host" $opPersonalAccountCode | quote }}
hostName = {{ onepasswordRead "op://dev/Homelab SSH key/HostName" $opPersonalAccountCode | quote }}
user = {{ onepasswordRead "op://dev/Homelab SSH key/User" $opPersonalAccountCode | quote }}
publicKey = {{ onepasswordRead "op://dev/Homelab SSH key/public key" $opPersonalAccountCode | quote }}

[data.ssh.unifi]
host = {{ onepasswordRead "op://dev/Unifi SSH key/Host" $opPersonalAccountCode | quote }}
hostName = {{ onepasswordRead "op://dev/Unifi SSH key/HostName" $opPersonalAccountCode | quote }}
user = {{ onepasswordRead "op://dev/Unifi SSH key/User" $opPersonalAccountCode | quote }}
publicKey = {{ onepasswordRead "op://dev/Unifi SSH key/public key" $opPersonalAccountCode | quote }}
{{- end }}

[data.tealdeer]
cacheDir = {{ joinPath .chezmoi.homeDir ".cache" "tealdeer" | quote }}
customPagesDir = {{ joinPath .chezmoi.homeDir ".local" "share" "tealdeer" "pages" | quote }}

[data.gpg]
passphrase = {{ $gpgPassphrase | quote }}

{{- if $isWork }}
[data.gemrc]
s3Source = {{ onepasswordRead "op://Employee/gemsrc/s3_source" $opWorkAccountCode | quote }}
username = {{ onepasswordRead "op://Employee/gemsrc/username" $opWorkAccountCode | quote }}
secret = {{ onepasswordRead "op://Employee/gemsrc/credential" $opWorkAccountCode | quote }}
region = {{ onepasswordRead "op://Employee/gemsrc/region" $opWorkAccountCode | quote }}
endpoint = {{ onepasswordRead "op://Employee/gemsrc/endpoint" $opWorkAccountCode | quote }}
{{- end }}

{{- if $isWork }}
[data.selfService]
appId = {{ onepasswordRead "op://Employee/Self service application/appId" $opWorkAccountCode | quote }}
{{- end }}

[data.posting]
themeDirectory = {{ joinPath .chezmoi.homeDir ".config" "posting" "themes" | quote }}

[gpg]
symmetric = true
args = ["--batch", "--passphrase", {{ $gpgPassphrase | quote }}, "--no-symkey-cache"]
